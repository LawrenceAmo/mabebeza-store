// -- // DB::statement('SET FOREIGN_KEY_CHECKS = 0');
// -- // DB::statement('DROP TABLE IF EXISTS stores');
// -- // DB::statement('SET FOREIGN_KEY_CHECKS = 1');
// -- // DB::statement('SET FOREIGN_KEY_CHECKS=0');
// --         // DB::statement('DROP TABLE IF EXISTS orders');
// --         // DB::statement('SET FOREIGN_KEY_CHECKS=1');

// --  $products = DB::table('products')
// --                         ->leftJoin('(
// --                             SELECT store_inventories.productID, store_inventories.storeID, SUM(products.cost_price * store_inventories.quantity) AS stock_value
// --                             FROM store_inventories
// --                             GROUP BY store_inventories.productID, store_inventories.storeID
// --                         ) AS inventory', function ($join) {
// --                             $join->on('inventory.productID', '=', 'products.productID')
// --                                 ->on('inventory.storeID', '=', 'store_inventories.storeID');
// --                         })
// --                         ->leftJoin('stores', 'stores.storeID', '=', 'store_inventories.storeID')
// --                         ->select(
// --                             'products.productID',
// --                             'products.name as product_name',
// --                             'products.publish',
// --                             'products.availability',
// --                             'products.sku',
// --                             'inventory.stock_value'
// --                         )
// --                         ->groupBy('products.productID', 'products.name', 'stores.name', 'products.publish', 'products.availability', 'products.sku')
// --                         ->get();
 
//                         -- Customer Info
//                         -- phone number +27 (all countries)
//                         -- email address
//                         -- full names
//                         -- 
 
//                         -- add btn for categories Home page
//                         -- make nav bar static

//                         -- Page layout
//                         -- categories
//                         -- featured products
//                         -- new products
//                         -- promo products
//                         -- brands
//                         -- footer
//                         -- 
//     -- MAIN CATEGORIES
// -- Nappies & Wipes
// -- Baby Formula & Milk Drinks
// -- Food
// -- Medicine & Hygiene
// -- Travel & safety gear
// -- Party Decor
 
// -- me befor you
// -- life in a year // top 1 
// -- the fault in our stars
// -- everything everything 

// -- view products by category
// -- view cart    

// -- Shipping functions
// -- restrict the area
// -- send mails





// -- ////////////////////////////////////////////////////////////////////////////////


// <!DOCTYPE html>
//   <html>
//     <head>
//       <title>Address Selection</title>
//       <style>
//         body {
//           margin: 0;
//         }
  
//         .sb-title {
//           position: relative;
//           top: -12px;
//           font-family: Roboto, sans-serif;
//           font-weight: 500;
//         }
  
//         .sb-title-icon {
//           position: relative;
//           top: -5px;
//         }
  
//         .card-container {
//           display: flex;
//           height: 500px;
//           width: 600px;
//         }
  
//         .panel {
//           background: white;
//           width: 300px;
//           padding: 20px;
//           display: flex;
//           flex-direction: column;
//           justify-content: space-around;
//         }
  
//         .half-input-container {
//           display: flex;
//           justify-content: space-between;
//         }
  
//         .half-input {
//           max-width: 120px;
//         }
  
//         .map {
//           width: 300px;
//         }
  
//         h2 {
//           margin: 0;
//           font-family: Roboto, sans-serif;
//         }
  
//         input {
//           height: 30px;
//         }
  
//         input {
//           border: 0;
//           border-bottom: 1px solid black;
//           font-size: 14px;
//           font-family: Roboto, sans-serif;
//           font-style: normal;
//           font-weight: normal;
//         }
  
//         input:focus::placeholder {
//           color: white;
//         }
  
//         .button-cta {
//           height: 40px;
//           width: 40%;
//           background: #3367d6;
//           color: white;
//           font-size: 15px;
//           text-transform: uppercase;
//           font-family: Roboto, sans-serif;
//           border: 0;
//           border-radius: 3px;
//           box-shadow: 0 4px 8px 0 rgba(0,0,0,0.48);
//           cursor: pointer;
//         }
//       </style>
//       <script>
//       "use strict";
  
//       function initMap() {
//         const CONFIGURATION = {
//           "ctaTitle": "address",
//           "mapOptions": {"center":{"lat":37.4221,"lng":-122.0841},"fullscreenControl":true,"mapTypeControl":false,"streetViewControl":true,"zoom":12,"zoomControl":true,"maxZoom":22,"mapId":""},
//           "mapsApiKey": "AIzaSyD7uUbl0Ol0kXBam07UPsjThrxL18qoVzA",
//           "capabilities": {"addressAutocompleteControl":true,"mapDisplayControl":true,"ctaControl":true}
//         };
//         const componentForm = [
//           'location',
//           'locality',
//           'administrative_area_level_1',
//           'country',
//           'postal_code',
//         ];
  
//         const getFormInputElement = (component) => document.getElementById(component + '-input');
//         // const map = new google.maps.Map(document.getElementById("gmp-map"), {
//         //   zoom: CONFIGURATION.mapOptions.zoom,
//         //   center: { lat: 37.4221, lng: -122.0841 },
//         //   mapTypeControl: false,
//         //   fullscreenControl: CONFIGURATION.mapOptions.fullscreenControl,
//         //   zoomControl: CONFIGURATION.mapOptions.zoomControl,
//         //   streetViewControl: CONFIGURATION.mapOptions.streetViewControl
//         // });
//         // const marker = new google.maps.Marker({map: map, draggable: false});
//         const autocompleteInput = getFormInputElement('location');
//         const autocomplete = new google.maps.places.Autocomplete(autocompleteInput, {
//           fields: ["address_components", "geometry", "name"],
//           types: ["address"],
//         });
//         autocomplete.addListener('place_changed', function () {
//         //   marker.setVisible(false);
//           const place = autocomplete.getPlace();
//           if (!place.geometry) {
//             // User entered the name of a Place that was not suggested and
//             // pressed the Enter key, or the Place Details request failed.
//             window.alert('No details available for input: \'' + place.name + '\'');
//             return;
//           }
//         //   renderAddress(place);
//           fillInAddress(place);
//         });
  
//         function fillInAddress(place) {  // optional parameter
//           const addressNameFormat = {
//             'street_number': 'short_name',
//             'route': 'long_name',
//             'locality': 'long_name',
//             'administrative_area_level_1': 'short_name',
//             'country': 'long_name',
//             'postal_code': 'short_name',
//           };
//           const getAddressComp = function (type) {
//             for (const component of place.address_components) {
//               if (component.types[0] === type) {
//                 return component[addressNameFormat[type]];
//               }
//             }
//             return '';
//           };
//           getFormInputElement('location').value = getAddressComp('street_number') + ' '
//                     + getAddressComp('route');
//                     console.log(getAddressComp('locality'))
//           for (const component of componentForm) {
//             // Location field is handled separately above as it has different logic.
//             if (component !== 'location') {
//               getFormInputElement(component).value = getAddressComp(component);
//             }
//           }
//         }
  
//         // function renderAddress(place) {
//         //   map.setCenter(place.geometry.location);
//         //   marker.setPosition(place.geometry.location);
//         //   marker.setVisible(true);
//         // }
//       }
//       </script>
//     </head>
//     <body>
//       <div class="card-container">
//         <div class="panel">
//           <div>
//             <img class="sb-title-icon" src="https://fonts.gstatic.com/s/i/googlematerialicons/location_pin/v5/24px.svg" alt="">
//             <span class="sb-title">Address Selection</span>
//           </div>
//           <input type="text" placeholder="Address" id="location-input"/>
//           <input type="text" placeholder="Apt, Suite, etc (optional)"/>
//           <input type="text" placeholder="City" id="locality-input"/>
//           <div class="half-input-container">
//             <input type="text" class="half-input" placeholder="State/Province" id="administrative_area_level_1-input"/>
//             <input type="text" class="half-input" placeholder="Zip/Postal code" id="postal_code-input"/>
//           </div>
//           <input type="text" placeholder="Country" id="country-input"/>
//           <button class="button-cta">address</button>
//         </div>
//         {{-- <div class="map" id="gmp-map"></div> --}}
//       </div>
//       <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD7uUbl0Ol0kXBam07UPsjThrxL18qoVzA&libraries=places&callback=initMap&solution_channel=GMP_QB_addressselection_v1_cABC" async defer></script>
//     </body>
//   </html>



{
"user_name": "Amohelang",
"user_surname": "Madiba",
"user_email": "amocodes@gmail.com",
"user_phone": "0719273169",
"user_street": "4165 cameroun street",
"user_suburb": "Tswelopele",
"user_city": "Tembisa",
"user_state": "Gauteng",
"user_country": "South Africa",
"user_postal_code": "1666",
"shipping_addressID": 5,
"geo_codes": null,
"first_name": "Amohelang",
"last_name": "Madiba",
"email": "amocodes@gmail.com",
"phone": "0719273169",
"street": "4165 cameroun street",
"suburb": "Tswelopele",
"city": "Tembisa",
"state": "Gauteng",
"postal_code": "1666",
"country": "South Africa",
"userID": 10,
"orderID": 6,
"created_at": "2023-08-15 10:38:56",
"updated_at": "2023-08-15 10:38:56",
"shipping_comments": "Please ship to Stokkafela Tembisa",
"order_number": "000100000005",
"descript": null,
"items": "[{\"qty\": 1, \"sku\": \"42358213\", \"url\": \"thumnail-ba06b6584ffe517c0b2b4934c48bec832ebyl.jpg\", \"type\": \"featured\", \"price\": \"5.99\", \"title\": \"Still Water\", \"publish\": 1, \"quantity\": 5, \"productID\": 20, \"cost_price\": \"4.42\", \"sale_price\": \"5.00\", \"store_name\": \"Mabebeza Tembisa\", \"availability\": 1, \"product_name\": \"BONAQUA STILL WATER 300ML\", \"sub_category_name\": \"Other\"}]",
"company_name": null,
"shipping_amount": "0.00",
"shipping_method": "delivery",
"shipping_description": null,
"comments": null,
"coupon_code": null,
"sub_total": "5.99",
"discount_amount": "0.99",
"tax_amount": null,
"total_amount": "5.00",
"total_amount_refunded": "0.00",
"qty": 1,
"is_guest": 1,
"paid": 1,
"paid_all": 0,
"payment": "5.00",
"status": "pending",
"deleted_at": null,
"storeID": null,
"store": "tembisa",
"invoice": null
}


// -- ///////////////////////////////////////////////////
// -- function checkAddress() {
// -- //   var address = event.target.elements["address"].value;
// -- //   let address = { latitude: -26.9813,  longitude:28.4617 }
// -- //   var areaCoordinates = "[-26.0093, 28.2181]"// event.target.elements["areaCoordinates"].value;

// -- //   var containsLocation = checkIfAddressIsInArea(address, areaCoordinates);

// -- var point = new google.maps.LatLng(-26.0093, 28.2181);
// -- var gautengBounds = new google.maps.LatLngBounds(
// --   new google.maps.LatLng(-26.6160, 27.9058),
// --   new google.maps.LatLng(-25.5094, 28.4090)
// -- );

// -- var containsLocation = gautengBounds.contains(point);

// -- console.log(containsLocation)
 
// -- }

// //   the online store will take stock from Mabebeza head office.
// //  (It will take everything like OnHand, Prices, stock availability)
//      So we'll need API that will connect Mabebeza Head office with online store
//      IF there's no stock in Mabebeza they'll make order to Stokkafela.
//      Make a list of all pain points for IQ(everything that we have problem with in IQ)
//      Check online pictures are not showing up, so pl

// For api please send an email to resellerapi@internet.co.za they will assist you.


// remove the banner untill a user click to cart